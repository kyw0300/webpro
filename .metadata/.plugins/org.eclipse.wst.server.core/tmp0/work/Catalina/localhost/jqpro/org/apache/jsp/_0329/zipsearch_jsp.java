/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.85
 * Generated at: 2023-03-30 07:39:57 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp._0329;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class zipsearch_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/css/bootstrap.min.css\">\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/jquery@3.6.3/dist/jquery.min.js\"></script>\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js\"></script>\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"../css/mystyle.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("$(function(){\r\n");
      out.write("	$('#zip').on('click',function(){\r\n");
      out.write("		dongvalue = $('#dong').val();\r\n");
      out.write("// 		alert(dong);\r\n");
      out.write("		if(dongvalue.length < 1 || dongvalue == null) {\r\n");
      out.write("			alert(\"검색어를 입력해주세요.\");\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		$.ajax({\r\n");
      out.write("			url: '");
      out.print( request.getContextPath());
      out.write("/zipSearch.do',\r\n");
      out.write("			type: 'post',\r\n");
      out.write("			data: {\"dong\": dongvalue},\r\n");
      out.write("			success: function(res){\r\n");
      out.write("// 				alert(\"성공\");\r\n");
      out.write("				\r\n");
      out.write("				code =\"<table border='1'>\";\r\n");
      out.write("				code += \"<tr><td>우편번호</td><td>주소</td><td>번지</td></tr>\"\r\n");
      out.write("				$(res).each(function(i,v){\r\n");
      out.write("					bunji = v.bunji;\r\n");
      out.write("					// undefined 비교\r\n");
      out.write("					if(typeof bunji == \"undefined\" ) bunji = \"\";\r\n");
      out.write("					\r\n");
      out.write("					code += \"<tr><td>\" + v.zipcode + \"</td>\";\r\n");
      out.write("					code += \"<td>\" + v.sido + \"  \" + v.gugun + \"  \" + v.dong + \"</td>\";\r\n");
      out.write("// 					code += \"<td>\" + v.gugun + \"</td>\";\r\n");
      out.write("// 					code += \"<td>\" + v.dong + \"</td>\";\r\n");
      out.write("					code += \"<td>\" + bunji + \"</td></tr>\";\r\n");
      out.write("				})\r\n");
      out.write("				code += \"</table>\";\r\n");
      out.write("				console.log(code);\r\n");
      out.write("				$('#result1').html(code);\r\n");
      out.write("			},\r\n");
      out.write("			error: function(xhr){\r\n");
      out.write("				alert(\"상태: \" + xhr.status + \"\\ncode : \" + xhr.statusText);\r\n");
      out.write("			},\r\n");
      out.write("			dataType: 'json'\r\n");
      out.write("		})\r\n");
      out.write("	})\r\n");
      out.write("	\r\n");
      out.write("	// 결과에서 한 줄을 선택하면(클릭이벤트)\r\n");
      out.write("	$(document).on('click','#result1 tr',function(){\r\n");
      out.write("		zip = $('td:eq(0)', this).text();\r\n");
      out.write("		addr = $('td:eq(1)', this).text();\r\n");
      out.write("		\r\n");
      out.write("		$('#uzip', opener.document).val(zip);\r\n");
      out.write("		$('#uadd1', opener.document).val(addr);\r\n");
      out.write("		\r\n");
      out.write("		window.close;\r\n");
      out.write("	})\r\n");
      out.write("})\r\n");
      out.write("</script>\r\n");
      out.write("<style>\r\n");
      out.write("	tr:first-child{\r\n");
      out.write("		background: gray;\r\n");
      out.write("		color: white;\r\n");
      out.write("	}\r\n");
      out.write("	#result1 tr:hover{\r\n");
      out.write("		background: lime;\r\n");
      out.write("	}\r\n");
      out.write("</style>\r\n");
      out.write("<body>\r\n");
      out.write("	<div class=\"box\">\r\n");
      out.write("	<p>찾는 동을 입력하세요.</p>\r\n");
      out.write("	<input type=\"text\" id=\"dong\">\r\n");
      out.write("	\r\n");
      out.write("	<input type=\"button\" value=\"검색\" id=\"zip\">\r\n");
      out.write("	<br><br>\r\n");
      out.write("	<div class=\"result\" id=\"result1\"></div>\r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
